jobs:
- job: Windows

  pool:
    vmImage: 'windows-2019'
    
  variables:
    NUGET_PACKAGES: $(Agent.WorkFolder)\.nuget

  steps:
  - checkout: self
    clean: true

  - task: UseDotNet@2
    displayName: 'Use .NET SDK'
    inputs:
      packageType: sdk
      version: 8.0.100
      includePreviewVersions: true

  - template: build/ci/gitversion.yml
  - template: build/ci/dotnet-install.yml

  - bash: |
      npm install -g conventional-changelog-cli@2.2.2
      conventional-changelog -p angular -u -r 1 -o "build/CHANGELOG.md"
      sed -r -i 's/\[(.*?)\]\((.*?)\)/\2/g' build/CHANGELOG.md
    displayName: 'Generate CHANGELOG.MD'

  - powershell: |
        $ErrorActionPreference = 'SilentlyContinue'
        cd $(build.sourcesdirectory)/src/WasmAot.UITests
        npm install
        cd $(build.sourcesdirectory)/src/Uno.Wasm.StaticLinking.Aot.UITests
        npm install
        cd $(build.sourcesdirectory)/src/Uno.Wasm.Node.Sample.Runner
        npm install
        cd $(build.sourcesdirectory)/src/Uno.Wasm.Threading.UITests
        npm install

    displayName: UI Tests npm dependencies

  - script: |
      cd $(build.sourcesdirectory)\src
      dotnet msbuild Uno.Wasm.Bootstrap-paclages-only.slnf /r /p:Configuration=Release /p:InformationalVersion=$(GITVERSION.INFORMATIONALVERSION) /p:PackageReleaseNotesFile=$(Build.SourcesDirectory)/build/CHANGELOG.md /p:PackageVersion=$(GITVERSION.FullSemVer) /p:PackageOutputPath=$(build.sourcesdirectory)\build\nuget /bl:$(build.artifactstagingdirectory)/win-packages.binlog
    displayName: Build packages

  - script: |
      cp $(Build.SourcesDirectory)/build/CHANGELOG.md $(build.artifactstagingdirectory)
    displayName: Copy changelog

  - task: CopyFiles@2
    inputs:
      SourceFolder: $(build.sourcesdirectory)
      Contents: ' $(build.sourcesdirectory)\build\nuget\*.nupkg'
      TargetFolder: $(build.artifactstagingdirectory)
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: PowerShell@2
    displayName: Authenticode Sign Packages
    inputs:
      filePath: build/signing/Sign-Package.ps1
    env:
      SignClientUser: $(SignClientUser)
      SignClientSecret: $(SignClientSecret)
      SignPackageName: "Uno.Wasm.Bootstrap"
      SignPackageDescription: "Uno.Wasm.Bootstrap"
      ArtifactDirectory: $(build.artifactstagingdirectory)
    condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')), not(eq(variables['SignClientSecret'], '')), not(eq(variables['SignClientUser'], '')))

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: uno-wasm-bootstrap-drop
      ArtifactType: Container

  - script: |
      dotnet msbuild /r /bl /m:1 /p:Configuration=Release /p:DISABLE_CLIHOST_NET6=true /p:InformationalVersion=$(GITVERSION.INFORMATIONALVERSION) /p:PackageVersion=$(GITVERSION.FullSemVer) /p:PackageOutputPath=$(build.sourcesdirectory)\build\nuget $(build.sourcesdirectory)/src/Uno.Wasm.Bootstrap-msbuild-only.slnf /bl:$(build.artifactstagingdirectory)/win-validation-binaries.binlog

    displayName: Build Validation Binaries

  # - powershell: |
  #     cd $(build.sourcesdirectory)/src/Uno.Wasm.Node.Sample.Runner
  #     .\Validate.ps1
  #   displayName: Build Validation Binaries

  - task: VisualStudioTestPlatformInstaller@1

  - task: VSTest@2
    inputs:
      testAssemblyVer2: |
        **\*UnitTests*.dll
        !**\ref\**
        !**\obj\**
      vstestLocationMethod: version
      vsTestVersion: latest
      testRunTitle: $(Agent.JobName)
      testSelector: testAssemblies

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: uno-wasm-bootstrap-drop
      ArtifactType: Container

