parameters:
  jobName: ''
  netcore_version: ''

jobs:
- job: ${{ parameters.jobName }}
  timeoutInMinutes: 90

  pool:
    vmImage: 'windows-2019'

  workspace:
    clean: all
      
  variables:
    NUGET_PACKAGES: $(build.sourcesdirectory)/.nuget
    NETCORE_VERSION: ${{ parameters.netcore_version }}

  steps:
  - checkout: self
    clean: true

  - template: build/ci/gitversion.yml
  - template: build/ci/dotnet-install.yml

  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk'
    condition: ne(variables['NETCORE_VERSION'], '2.2.x')
    inputs:
      packageType: sdk
      version: ${{ parameters.netcore_version }}
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: UseDotNet@2
    displayName: 'Install .NET 5 SDK'
    inputs:
      packageType: sdk
      version: '5.0.400'
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - pwsh: |
      cd $(build.sourcesdirectory)/src/Uno.Wasm.Bootstrap
      dotnet msbuild /r /p:Configuration=Release /p:DISABLE_CLIHOST_NET6=true
    displayName: Build bootstrap

  - pwsh: |
      cd $(build.sourcesdirectory)/src/Uno.Wasm.SampleNet5
      $customMonoTempPath="$env:temp\with a space\test"
      mkdir $customMonoTempPath
      dotnet msbuild /r /p:Configuration=Release "/p:WasmShellMonoTempFolder=$customMonoTempPath" /p:DISABLE_CLIHOST_NET6=true /p:WasmShellEmccLinkOptimization=false /t:Publish /m:1 /bl:$(build.artifactstagingdirectory)/SampleNet5-win-temp-with-space.binlog
    displayName: Build Raytracer Sample with Spaces

  - pwsh: |
      cd $(build.sourcesdirectory)/src/Uno.Wasm.AotTests.net5
      $customMonoTempPath="$env:temp\with a space\test2"
      mkdir $customMonoTempPath
      dotnet msbuild /r /p:Configuration=Release "/p:WasmShellMonoTempFolder=$customMonoTempPath" /p:DISABLE_CLIHOST_NET6=true /p:WasmShellEmccLinkOptimization=false /t:Publish /m:1 /bl:$(build.artifactstagingdirectory)/aottest-win-temp-with-space.binlog
    displayName: Build Raytracer Sample with Spaces

  - pwsh: |
      cd $(build.sourcesdirectory)/src/Uno.Wasm.AotTests.net5
      dotnet msbuild /r /p:Configuration=Release /p:DISABLE_CLIHOST_NET6=true /p:WasmShellEmccLinkOptimization=false /t:Publish /m:1 /bl:$(build.artifactstagingdirectory)/SampleNet5-win.binlog
    displayName: Build Raytracer Sample

  - pwsh: |
      $(build.sourcesdirectory)\build\scripts\run-tests-windows.ps1 `
      "$(build.sourcesdirectory)\src\Uno.Wasm.AotTests.net5\bin\Release\net5.0\dist" `
      "$(build.sourcesdirectory)\src\WasmAot.UITests" `
      "http://localhost:8000/"

    displayName: Raytracer UI Tests Net5
    env:
      BUILD_SOURCESDIRECTORY: "$(build.sourcesdirectory)"

<<<<<<< HEAD
=======
  # Static linking test (net5) without the linker
  - pwsh: |
      cd $(build.sourcesdirectory)/src/Uno.Wasm.StaticLinking.Interpreter
      dotnet clean -c Release /p:DISABLE_CLIHOST_NET6=true
      dotnet publish -c Release /m:1 /p:DISABLE_CLIHOST_NET6=true /p:WasmShellEmccLinkOptimization=false /p:WasmShellILLinkerEnabled=false /bl:$(build.artifactstagingdirectory)/SampleNet5-nolinker-win.binlog
    displayName: Build StaticLinking.Aot Sample (net5)

  # Static linking test (net5)
>>>>>>> 8cbc518 (fix: Ensure emscripten can run with linker disabled (interpreter only))
  - pwsh: |
      cd $(build.sourcesdirectory)/src/Uno.Wasm.StaticLinking.Aot.Net5
      dotnet msbuild /r /p:Configuration=Release /p:DISABLE_CLIHOST_NET6=true /p:WasmShellEmccLinkOptimization=false /t:Publish /m:1 /bl:$(build.artifactstagingdirectory)/SampleNet5-win.binlog
    displayName: Build StaticLinking.Aot Sample

  - pwsh: |
      $(build.sourcesdirectory)\build\scripts\run-tests-windows.ps1 `
      "$(build.sourcesdirectory)\src\Uno.Wasm.StaticLinking.Aot.Net5\bin\Release\net5.0\dist" `
      "$(build.sourcesdirectory)\src\Uno.Wasm.StaticLinking.Aot.UITests" `
      "http://localhost:8000/"

    displayName: StaticLinking.Aot Tests Net5
    env:
      BUILD_SOURCESDIRECTORY: "$(build.sourcesdirectory)"

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: uno-wasm-bootstrap-windows-test
      ArtifactType: Container
