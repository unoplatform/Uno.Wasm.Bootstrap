parameters:
  jobName: ''
  linux_container: ''
  linux_vmImage: 'ubuntu-latest'

jobs:
- job: ${{ parameters.jobName }}
  timeoutInMinutes: 90

  container: ${{ parameters.linux_container }}

  workspace:
    clean: all
      
  pool:
    vmImage: ${{ parameters.linux_vmImage }}

  variables:
    NUGET_PACKAGES: $(build.sourcesdirectory)/.nuget

  steps:
  - checkout: self
    clean: true

  - template: build/ci/gitversion.yml
  - template: build/ci/dotnet-install.yml

  - task: UseDotNet@2
    displayName: 'Use .NET SDK'
    inputs:
      packageType: sdk
      version: 8.0.100
      includePreviewVersions: true

  - bash: |
      cd $(build.sourcesdirectory)/src/Uno.Wasm.Bootstrap
      dotnet msbuild /r /p:Configuration=Release /p:DISABLE_CLIHOST_NET6=true
    displayName: Build bootstrap

  - bash: |
      cd $(build.sourcesdirectory)/src
      dotnet publish -c Release /m:1 /p:DISABLE_CLIHOST_NET6=true Uno.Wasm.Bootstrap-netcore-only.slnf /bl:$(build.artifactstagingdirectory)/SampleNet5.binlog
    displayName: Build NetCore-Wasm Sample

  - task: CopyFiles@2
    inputs:
      SourceFolder: $(build.sourcesdirectory)/src/Uno.Wasm.Sample.RayTracer/bin/Release/net6.0/publish
      Contents: '**/*.*'
      TargetFolder: $(build.artifactstagingdirectory)/Uno.Wasm.Sample.RayTracer
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  ## Raytracer validation
  - bash: |
      $(build.sourcesdirectory)/build/scripts/run-tests.sh \
        "$(build.sourcesdirectory)/src/Uno.Wasm.Sample.RayTracer/bin/Release/net6.0/dist" \
        "$(build.sourcesdirectory)/src/WasmAot.UITests" "http://localhost:8000/"
    displayName: Raytracer UI Tests Net5
    env:
      BUILD_SOURCESDIRECTORY: "$(build.sourcesdirectory)"

  ## Threads Interp validation
  - bash: |
      cd $(build.sourcesdirectory)/src/Uno.Wasm.Threads
      dotnet clean -c Release /p:DISABLE_CLIHOST_NET6=true
      dotnet publish -c Release /m:1 /p:DISABLE_CLIHOST_NET6=true "/p:WasmShellWebAppBasePath=/"
    displayName: Build Threads test

  - bash: |
      $(build.sourcesdirectory)/build/scripts/run-tests.sh \
        "$(build.sourcesdirectory)/src/Uno.Wasm.Threads/bin/Release/net8.0/dist" \
        "$(build.sourcesdirectory)/src/Uno.Wasm.Threading.UITests" "http://localhost:8000/"
    displayName: Threading UI Tests 
    env:
      BUILD_SOURCESDIRECTORY: "$(build.sourcesdirectory)"

  ### Threads AOT validation
  - bash: |
      cd $(build.sourcesdirectory)/src/Uno.Wasm.Threads.Aot
      dotnet clean -c Release /p:DISABLE_CLIHOST_NET6=true
      dotnet publish -c Release /m:1 /p:DISABLE_CLIHOST_NET6=true "/p:WasmShellWebAppBasePath=/"
    displayName: Build Threads AOT test
  
  - bash: |
      $(build.sourcesdirectory)/build/scripts/run-tests.sh \
        "$(build.sourcesdirectory)/src/Uno.Wasm.Threads.Aot/bin/Release/net6.0/dist" \
        "$(build.sourcesdirectory)/src/Uno.Wasm.Threading.UITests" "http://localhost:8000/"
    displayName: Threading AOT UI Tests 
    env:
      BUILD_SOURCESDIRECTORY: "$(build.sourcesdirectory)"

  ## SWA sub-path validation
  - bash: |
      cd $(build.sourcesdirectory)/src/Uno.Wasm.Sample.RayTracer
      dotnet clean -c Release /p:DISABLE_CLIHOST_NET6=true
      dotnet publish -c Release /m:1 /p:DISABLE_CLIHOST_NET6=true "/p:WasmShellWebAppBasePath=/"
    displayName: Build RayTracer with sub-path

  - task: CopyFiles@2
    inputs:
      SourceFolder: $(build.sourcesdirectory)/src/Uno.Wasm.Sample.RayTracer/bin/Release/net6.0/publish
      Contents: '**/*.*'
      TargetFolder: $(build.artifactstagingdirectory)/subpath-override
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - bash: |
      $(build.sourcesdirectory)/build/scripts/run-tests-swa.sh \
        "$(build.sourcesdirectory)/src/Uno.Wasm.Sample.RayTracer/bin/Release/net6.0/dist" \
        "$(build.sourcesdirectory)/src/WasmAot.UITests" "http://localhost:8000/test/inner"
    displayName: Raytracer UI Tests Net5 (SWA)
    env:
      BUILD_SOURCESDIRECTORY: "$(build.sourcesdirectory)"

  ## Static linking validation
  - bash: |
      $(build.sourcesdirectory)/build/scripts/run-tests.sh \
        "$(build.sourcesdirectory)/src/Uno.Wasm.StaticLinking.Aot.Net6/bin/Release/net6.0/dist" \
        "$(build.sourcesdirectory)/src/Uno.Wasm.StaticLinking.Aot.UITests" "http://localhost:8000/"
    displayName: StaticLinking.Aot Tests net5
    env:
      BUILD_SOURCESDIRECTORY: "$(build.sourcesdirectory)"

  ## Static linking validation (net7)
  - bash: |
      $(build.sourcesdirectory)/build/scripts/run-tests.sh \
        "$(build.sourcesdirectory)/src/Uno.Wasm.StaticLinking.net7/bin/Release/net7.0/dist" \
        "$(build.sourcesdirectory)/src/Uno.Wasm.StaticLinking.Aot.UITests" "http://localhost:8000/"
    displayName: StaticLinking.Aot Tests net7
    env:
      BUILD_SOURCESDIRECTORY: "$(build.sourcesdirectory)"
  
  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: uno-wasm-bootstrap-linux-aot
      ArtifactType: Container

  ## Static linking validation (net7)
  - bash: |
      $(build.sourcesdirectory)/build/scripts/run-tests-csp.sh \
        "$(build.sourcesdirectory)/src/Uno.Wasm.StaticLinking.net7/bin/Release/net7.0/dist" \
        "$(build.sourcesdirectory)/src/Uno.Wasm.StaticLinking.Aot.UITests" "http://localhost:8000/"
    displayName: StaticLinking.Aot Tests net7 (CSP Enabled)
    env:
      BUILD_SOURCESDIRECTORY: "$(build.sourcesdirectory)"

  ## Static linking server validation (net7)
  - bash: |
      $(build.sourcesdirectory)/build/scripts/run-tests-server.sh \
        "$(build.sourcesdirectory)/src/Uno.Wasm.StaticLinking.Server.net7" \
        "$(build.sourcesdirectory)/src/Uno.Wasm.StaticLinking.Aot.UITests" "http://localhost:8000/"
    displayName: StaticLinking.Aot Server Tests net7
    env:
      BUILD_SOURCESDIRECTORY: "$(build.sourcesdirectory)"

  - task: CopyFiles@2
    condition: always()
    inputs:
      SourceFolder: $(build.sourcesdirectory)/src/Uno.Wasm.StaticLinking.Server.net7/bin/Release/net7.0
      Contents: '**/*.*'
      TargetFolder: $(build.artifactstagingdirectory)/Uno.Wasm.StaticLinking.Server.net7
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  # Interpreter debug for symbols copy issue
  - bash: |
      cd $(build.sourcesdirectory)/src/Uno.Wasm.StaticLinking.Interpreter
      dotnet clean -c Debug /p:DISABLE_CLIHOST_NET6=true
      dotnet publish -c Debug /m:1 /p:DISABLE_CLIHOST_NET6=true /p:WasmShellEmccLinkOptimization=false /bl:$(build.artifactstagingdirectory)/sample.debug-interpreter-linux-debug.binlog
    displayName: Build Debug Interpreter with linking Sample

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: uno-wasm-bootstrap-linux-aot
      ArtifactType: Container
